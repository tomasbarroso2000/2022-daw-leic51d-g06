{
  "openapi": "3.0.1",
  "info": {
    "title": "Exploding Battleships API",
    "description": "A Battleships game API created by TheExplodingKittens",
    "termsOfService": "http://swagger.io/terms/",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Users",
      "description": "Requests related to users"
    },
    {
      "name": "Unauthenticated",
      "description": "Requests related to games"
    }
  ],
  "paths": {
    "/api/me": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "User home",
        "description": "User home with the user's information",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully got the user info",
            "content": {
              "application/vnd.siren+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserOutputModelSiren"
                }
              }
            }
          },
          "400": {
            "description": "Invalid token",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a user",
        "description": "Create a new user with a name, an email and a password",
        "requestBody": {
          "description": "input",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created the new user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUser"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/token": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create a token",
        "description": "Create a token for your user",
        "requestBody": {
          "description": "input",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewToken"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created the new token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewToken"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/lobby": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Enter a lobby",
        "description": "Enter a lobby or a game if someone is already waiting to play",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "game-type",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnterLobby"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully placed a player in a lobby or in a game",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterLobby"
                }
              }
            }
          },
          "400": {
            "description": "Invalid game type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/rankings": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get the rankings",
        "description": "Get the rankings of users sorted by score",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of results to get",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 10
          },
          {
            "name": "skip",
            "in": "query",
            "description": "The number of results to skip",
            "required": true,
            "schema": {
              "type": "integer"
            },
            "example": 0
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully placed a player in a lobby or in a game",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnterLobby"
                }
              }
            }
          },
          "400": {
            "description": "Invalid game type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    },
    "/api/games/total": {
      "get": {
        "tags": [
          "Games"
        ],
        "summary": "Get the number of played games",
        "description": "Get the total number of played games",
        "responses": {
          "200": {
            "description": "Succesfully got the total number of played games",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NumberOfPlayedGames"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "AppError": {
        "type": "object",
        "description": "Application error",
        "required": [
          "errorCode",
          "errorMessage"
        ],
        "properties": {
          "errorCode": {
            "type": "integer",
            "example": 1003
          },
          "errorMessage": {
            "type": "string",
            "example": "Something went wrong"
          }
        }
      },
      "EnterLobby": {
        "type": "object",
        "description": "waitingForGame or gameId",
        "required": [
          "waiting for game"
        ],
        "properties": {
          "waitingForGame": {
            "type": "boolean",
            "example": true
          },
          "gameId": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "NewUser": {
        "type": "object",
        "description": "Name, email and password of new user",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "name": {
            "type": "string",
            "example": "Fiona"
          },
          "email": {
            "type": "string",
            "example": "iloveshrek@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "Shrekinho1"
          }
        }
      },
      "NewToken": {
        "type": "object",
        "description": "Email and password of user",
        "required": [
          "name",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "example": "iloveshrek@gmail.com"
          },
          "password": {
            "type": "string",
            "example": "Shrekinho1"
          }
        }
      },
      "NumberOfPlayedGames": {
        "type": "object",
        "description": "the total of played games",
        "required": [
          "number"
        ],
        "properties": {
          "number": {
            "type": "integer",
            "example": 1
          }
        }
      },
      "UserOutputModel": {
        "type": "object",
        "description": "Id, name and score of the user",
        "required": [
          "id",
          "name",
          "email",
          "score"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Fiona"
          },
          "email": {
            "type": "string",
            "example": "iloveshrek@gmail.com"
          },
          "score": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "UserOutputModelSiren": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Entity"
          },
          {
            "properties": {
              "class": {
                "example": [
                  "UserOutputModel"
                ]
              },
              "properties": {
                "$ref": "#/components/schemas/UserOutputModel"
              }
            }
          }
        ]
      },
      "ProblemJson": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": ""
          },
          "title": {
            "type": "string",
            "example": "Something went wrong"
          },
          "status": {
            "type": "integer",
            "example": 500
          },
          "detail": {
            "type": "string",
            "example": ""
          },
          "instance": {
            "type": "string",
            "example": ""
          }
        }
      },
      "Entity": {
        "type": "object",
        "properties": {
          "class": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubEntity"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "SubEntity": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "rel": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "class": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "properties": {
            "type": "object"
          },
          "entities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubEntity"
            }
          },
          "actions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Action"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Link"
            }
          }
        }
      },
      "Action": {
        "type": "object",
        "required": [
          "name",
          "href"
        ],
        "properties": {
          "class": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "name": {
            "type": "string"
          },
          "method": {
            "type": "string"
          },
          "href": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        }
      },
      "Field": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "hidden",
              "text",
              "search",
              "tel",
              "url",
              "email",
              "password",
              "datetime",
              "date",
              "month",
              "week",
              "time",
              "datetime-local",
              "number",
              "range",
              "color",
              "checkbox",
              "radio",
              "file"
            ]
          },
          "title": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Link": {
        "type": "object",
        "required": [
          "rel",
          "href"
        ],
        "properties": {
          "class": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string"
          },
          "rel": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "href": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      }
    }
  }
}